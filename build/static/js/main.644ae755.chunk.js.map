{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","changedObject","put","delete","Filter","value","setValue","onChange","e","target","personForm","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setNotification","eraseForm","displayMessage","msg","type","notification","message","setTimeout","onSubmit","preventDefault","existingPerson","find","person","name","newPerson","number","confirmMsg","window","confirm","personsService","updatedPerson","map","returnedPerson","concat","catch","err","errors","error","key","Person","deletePerson","onClick","Persons","filterValue","personsToShow","filter","toLocaleLowerCase","includes","removePerson","p","Notification","className","App","useState","setFilterValue","useEffect","initialPersons","PersonForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.644ae755.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => (\n  axios\n    .get(baseUrl)\n    .then(response => response.data)\n)\n\nconst create = (newObject) => (\n  axios\n    .post(baseUrl, newObject)\n    .then(response => response.data)\n)\n\nconst update = (id, changedObject) => (\n  axios\n    .put(`${baseUrl}/${id}`, changedObject)\n    .then(response => response.data)\n)\n\nconst destroy = (id) => (\n  axios\n    .delete(`${baseUrl}/${id}`)\n)\n\nexport default { getAll, create, update, destroy }","import React from 'react';\n\nconst Filter =  ({ value, setValue }) => (\n  <div>\n    filter shown with <input value={value} onChange={(e) => setValue(e.target.value)}></input>\n  </div>\n);\n\nexport default Filter;","import React from 'react';\n\nimport personsService from '../services/persons'\n\nconst personForm = ({\n    persons, setPersons,\n    newName, setNewName,\n    newNumber, setNewNumber,\n    setNotification\n  }) => {\n\n  const eraseForm = () => {\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const displayMessage = (msg, type) => {\n    const notification = {\n      message: msg\n    }\n    if (type)\n      notification.type = type\n    setNotification(notification);\n    setTimeout(() => setNotification(null), 5000);\n  }\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    const existingPerson = persons.find(person => person.name === newName);\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    if (existingPerson) {\n      const confirmMsg = `${newName} is already added to phonebook, replace to old number with a new one?`;\n      if (window.confirm(confirmMsg)) {\n        personsService\n          .update(existingPerson.id, newPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(person =>\n              person.id === updatedPerson.id\n              ? updatedPerson : person\n            ))\n            eraseForm();\n            displayMessage(`Changed number for ${newPerson.name}`);\n          })\n      }\n    } else {\n      personsService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        eraseForm();\n        displayMessage(`Added ${newPerson.name}`);\n      })\n      .catch((err) => {\n        const errors = err.response && err.response.data.error;\n        if (errors) {\n         displayMessage(errors.map(e => <div key={e}>{e}</div>), 'error')\n        }\n      })\n    }\n  };\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default personForm;","import React from 'react';\n\nconst Person = ({ person, deletePerson }) => (\n  <div>\n    {person.name} {person.number}\n    <button onClick={deletePerson}>\n      delete\n    </button>\n  </div>\n);\n\nexport default Person;","import React from 'react';\n\nimport personsService from '../services/persons';\nimport Person from './Person';\n\nconst Persons = ({ persons, setPersons, filterValue, setNotification }) => {\n  const personsToShow = persons.filter(person => (\n    person.name.toLocaleLowerCase()\n      .includes(filterValue.toLocaleLowerCase())\n  ));\n\n  const displayMessage = (msg, type) => {\n    const notification = {\n      message: msg\n    }\n    if (type)\n      notification.type = type\n    setNotification(notification);\n    setTimeout(() => setNotification(null), 5000);\n  }\n\n  const removePerson = (id) => {\n    setPersons(\n      persons.filter(p => p.id !== id )\n    )\n  }\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`))\n      personsService\n        .destroy(person.id)\n        .then(() => {\n          removePerson(person.id);\n          displayMessage(`Removed ${person.name}`);\n        })\n        .catch(() => {\n          removePerson(person.id);\n          displayMessage(`Information of ${person.name} has already been removed from server`, 'error');\n        })\n  }\n\n  return personsToShow.map(person =>\n    <Person\n      key={person.name}\n      person={person}\n      deletePerson={() => deletePerson(person)}\n    />\n  )\n};\n\nexport default Persons;","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (!notification || !notification.message) {\n    return null;\n  }\n\n  let className = 'notification'\n  if (notification.type)\n    className += ` ${notification.type}`\n  return (\n    <div className={className}>\n      {notification.message}\n    </div>\n  );\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\n\nimport personsService from './services/persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filterValue, setFilterValue ] = useState('');\n  const [ notification, setNotification ] = useState();\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons));\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter value={filterValue} setValue={setFilterValue} />\n      <h2>add a new</h2>\n      <PersonForm\n        persons={persons} setPersons={setPersons}\n        newName={newName} setNewName={setNewName}\n        newNumber={newNumber} setNewNumber={setNewNumber}\n        setNotification={setNotification}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons} setPersons={setPersons}\n        filterValue={filterValue}\n        setNotification={setNotification}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}